apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.prometheus.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.prometheus.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.prometheus.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.prometheus.name }}
    spec:
      containers:
        - name: {{ .Values.prometheus.name }}
          image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
          imagePullPolicy: {{ .Values.prometheus.image.pullPolicy }}
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
          ports:
            - containerPort: {{ .Values.prometheus.service.port }}
              name: http
          resources:
            {{- toYaml .Values.prometheus.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
            - name: data
              mountPath: /prometheus
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: config
          configMap:
            name: {{ .Values.prometheus.name }}-config
        - name: data
          {{- if .Values.prometheus.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.prometheus.name }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.prometheus.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.prometheus.name }}
spec:
  type: {{ .Values.prometheus.service.type }}
  ports:
    - port: {{ .Values.prometheus.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: {{ .Values.prometheus.name }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.prometheus.name }}-config
  namespace: {{ .Release.Namespace }}
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'collector'
        static_configs:
          - targets: ['{{ .Values.collector.name }}:8889']
{{- if .Values.prometheus.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.prometheus.name }}-data
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.prometheus.persistence.storageClass }}
  storageClassName: {{ .Values.prometheus.persistence.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.prometheus.persistence.size }}
{{- end }} 