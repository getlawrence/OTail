apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.grafana.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.grafana.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.grafana.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.grafana.name }}
    spec:
      containers:
        - name: {{ .Values.grafana.name }}
          image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
          imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.grafana.service.port }}
              name: http
          env:
            {{- range .Values.grafana.env }}
            - name: {{ .name }}
              {{- if .valueFrom }}
              {{- toYaml .valueFrom | nindent 14 }}
              {{- else }}
              value: {{ .value | quote }}
              {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.grafana.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/grafana
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
      volumes:
        - name: data
          {{- if .Values.grafana.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.grafana.name }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.grafana.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.grafana.name }}
spec:
  type: {{ .Values.grafana.service.type }}
  ports:
    - port: {{ .Values.grafana.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: {{ .Values.grafana.name }}
{{- if .Values.grafana.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.grafana.name }}-data
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.grafana.persistence.storageClass }}
  storageClassName: {{ .Values.grafana.persistence.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.grafana.persistence.size }}
{{- end }} 